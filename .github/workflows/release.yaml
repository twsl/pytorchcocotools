---
name: Release

on:
  release:
    types: [published]

env:
  python-version: "3.11"

jobs:
  release:
    name: Release package
    runs-on: ['ubuntu-latest']
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv

      - name: Set up cache
        uses: actions/cache@v4
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ env.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: venv-${{ runner.os }}-${{ env.python-version }}-

      - name: Install dependencies
        run: poetry install --no-interaction --all-extras

      - name: Dynamic versioning
        run: poetry self add "poetry-dynamic-versioning[plugin]"

      - name: Enable dynamic versioning
        run: poetry dynamic-versioning enable

      - name: Check poetry
        run: |
          poetry check

      - name: Build
        run: |
          poetry build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: dist/

      - name: Show
        run: ls -l dist/

      - name: Publish
        run: |
          poetry publish -u "__token__" -p ${{ secrets.PYPI_API_TOKEN }}

  upload-packages:
    runs-on: ["ubuntu-latest"]
    permissions: write-all
    needs: release
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download artifacts
        uses: actions/download-artifact@v6
        with:
          name: build-${{ github.sha }}
          path: dist/

      - name: Upload to release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.event.ref, 'refs/tags') || github.event_name == 'release'
        with:
          files: dist/*
